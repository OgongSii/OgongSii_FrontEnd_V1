{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\fxxkCalc\\\\fxxkcalc\\\\ikk2Timer\\\\ikk2Timer\\\\src\\\\pages\\\\Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  _s();\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchUsers = async () => {\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null);\n      setUsers(null);\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true);\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      setUsers(response.data); // 데이터는 response.data 안에 들어있습니다.\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529\\uC911..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  if (!users) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" (\", user.name, \")\"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUsers,\n      children: \"\\uB2E4\\uC2DC \\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Users, \"tq8fu1gobXtE39DyM7UStpaQx7k=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","axios","Users","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","e","map","user","username","name","id"],"sources":["C:/Users/user/OneDrive/바탕 화면/fxxkCalc/fxxkcalc/ikk2Timer/ikk2Timer/src/pages/Users.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Users() {\r\n  const [users, setUsers] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\r\n      setError(null);\r\n      setUsers(null);\r\n      // loading 상태를 true 로 바꿉니다.\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        'https://jsonplaceholder.typicode.com/users'\r\n      );\r\n      setUsers(response.data); // 데이터는 response.data 안에 들어있습니다.\r\n    } catch (e) {\r\n      setError(e);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) return <div>로딩중..</div>;\r\n  if (error) return <div>에러가 발생했습니다</div>;\r\n  if (!users) return null;\r\n  return (\r\n    <>\r\n      <ul>\r\n        {users.map(user => (\r\n          <li key={user.id}>\r\n            {user.username} ({user.name})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={fetchUsers}>다시 불러오기</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF;MACAD,QAAQ,CAAC,IAAI,CAAC;MACdJ,QAAQ,CAAC,IAAI,CAAC;MACd;MACAE,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,4CAA4C,CAC7C;MACDP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVL,QAAQ,CAACK,CAAC,CAAC;IACb;IACAP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACdS,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAgB;EACpC,IAAIE,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAqB;EACvC,IAAI,CAACJ,KAAK,EAAE,OAAO,IAAI;EACvB,oBACE;IAAA,wBACE;MAAA,UACGA,KAAK,CAACW,GAAG,CAACC,IAAI,iBACb;QAAA,WACGA,IAAI,CAACC,QAAQ,QAAID,IAAI,CAACE,IAAI;MAAA,GADpBF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAQ,OAAO,EAAET,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAAA,gBAC5C;AAEP;AAAC,GAzCQP,KAAK;AAAA,KAALA,KAAK;AA2Cd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}