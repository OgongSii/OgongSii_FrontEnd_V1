{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC0C1\\uD604\\\\Documents\\\\GitHub\\\\ikk2Timer\\\\src\\\\pages\\\\Timer.jsx\",\n  _s2 = $RefreshSig$();\nimport styled from 'styled-components';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport './Timer.css';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackGround = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-repeat:no-repeat;\n`;\n_c = BackGround;\nconst WhiteBar = styled.div`\n    align-items:center;\n    height:500px;\n    width:800px;\n    background-color:white;\n    border-radius:1.2rem;\n    margin:150px auto;\n    text-align:center;\n`;\n_c2 = WhiteBar;\nconst TextSet = styled.div`\n    margin-top:120px;\n`;\n_c3 = TextSet;\nconst Font = styled.div`\n    font-size:150px;\n    font-weight:bold;\n`;\n_c4 = Font;\nconst Btn = styled.button`\n    margin-right:15px;\n    display:inline-block;\n`;\n_c5 = Btn;\nexport default function Timer() {\n  _s2();\n  var _s = $RefreshSig$();\n  const useCounter = (initialValue, ms) => {\n    _s();\n    const [count, setCount] = useState(initialValue);\n    const intervalRef = useRef(null);\n    const start = useCallback(() => {\n      if (intervalRef.current !== null) {\n        return;\n      }\n      intervalRef.current = setInterval(() => {\n        setCount(c => c + 1);\n      }, ms);\n    }, []);\n    const stop = useCallback(() => {\n      if (intervalRef.current === null) {\n        return;\n      }\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }, []);\n    const reset = useCallback(() => {\n      setCount(0);\n      stop();\n    }, []);\n    return {\n      count,\n      start,\n      stop,\n      reset\n    };\n  };\n  _s(useCounter, \"TnAVflD9Of05e38mF/YGjEb4eC8=\");\n  const [currentHours, setCurrentHours] = useState(0);\n  const [currentMinutes, setCurrentMinutes] = useState(0);\n  const [currentSeconds, setCurrentSeconds] = useState(0);\n  const {\n    count,\n    start,\n    stop,\n    reset\n  } = useCounter(0, 1000);\n\n  // 타이머 기능\n  const timer = () => {\n    const checkMinutes = Math.floor(count / 60);\n    const hours = Math.floor(count / 3600);\n    const minutes = checkMinutes % 60;\n    const seconds = count % 60;\n    setCurrentHours(hours);\n    setCurrentSeconds(seconds);\n    setCurrentMinutes(minutes);\n  };\n  useEffect(timer, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: 'body { background-color: #FFCCE5; }'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BackGround, {\n      children: /*#__PURE__*/_jsxDEV(WhiteBar, {\n        className: \"fadein\",\n        children: /*#__PURE__*/_jsxDEV(TextSet, {\n          children: [/*#__PURE__*/_jsxDEV(Font, {\n            className: \"fadein\",\n            children: [currentHours < 10 ? `0${currentHours}` : currentHours, \":\", currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes, \":\", currentSeconds < 10 ? `0${currentSeconds}` : currentSeconds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Btn, {\n            onClick: start,\n            className: \"btnset fadein\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Btn, {\n            onClick: stop,\n            className: \"btnset fadein\",\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Btn, {\n            onClick: reset,\n            className: \"btnset fadein\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s2(Timer, \"bP2vKBuHvf9u3c3WYlR8DqalsYk=\", true);\n_c6 = Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"BackGround\");\n$RefreshReg$(_c2, \"WhiteBar\");\n$RefreshReg$(_c3, \"TextSet\");\n$RefreshReg$(_c4, \"Font\");\n$RefreshReg$(_c5, \"Btn\");\n$RefreshReg$(_c6, \"Timer\");","map":{"version":3,"names":["styled","React","useCallback","useEffect","useRef","useState","useMediaQuery","BackGround","div","WhiteBar","TextSet","Font","Btn","button","Timer","useCounter","initialValue","ms","count","setCount","intervalRef","start","current","setInterval","c","stop","clearInterval","reset","currentHours","setCurrentHours","currentMinutes","setCurrentMinutes","currentSeconds","setCurrentSeconds","timer","checkMinutes","Math","floor","hours","minutes","seconds"],"sources":["C:/Users/박상현/Documents/GitHub/ikk2Timer/src/pages/Timer.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport './Timer.css';\r\nimport '../App.css';\r\nconst BackGround=styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-repeat:no-repeat;\r\n`;\r\n\r\nconst WhiteBar=styled.div`\r\n    align-items:center;\r\n    height:500px;\r\n    width:800px;\r\n    background-color:white;\r\n    border-radius:1.2rem;\r\n    margin:150px auto;\r\n    text-align:center;\r\n`;\r\n\r\nconst TextSet=styled.div`\r\n    margin-top:120px;\r\n`;\r\n\r\nconst Font=styled.div`\r\n    font-size:150px;\r\n    font-weight:bold;\r\n`;\r\n\r\nconst Btn=styled.button`\r\n    margin-right:15px;\r\n    display:inline-block;\r\n`;\r\nexport default function Timer(){\r\n    const useCounter = (initialValue, ms) => {\r\n        const [count, setCount] = useState(initialValue);\r\n        const intervalRef = useRef(null);\r\n        const start = useCallback(() => {\r\n            if (intervalRef.current !== null) {\r\n                return;\r\n            }\r\n            intervalRef.current = setInterval(() => {\r\n                setCount(c => c + 1);\r\n            }, ms);\r\n        }, []);\r\n        const stop = useCallback(() => {\r\n            if (intervalRef.current === null) {\r\n                return;\r\n            }\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n        }, []);\r\n        const reset = useCallback(() => {\r\n            setCount(0);\r\n            stop()\r\n        }, []);\r\n        return { count, start, stop, reset };\r\n    }\r\n    const [currentHours, setCurrentHours] = useState(0);\r\n    const [currentMinutes, setCurrentMinutes] = useState(0);\r\n    const [currentSeconds, setCurrentSeconds] = useState(0);\r\n    const { count, start, stop, reset } = useCounter(0, 1000);\r\n\r\n\t// 타이머 기능\r\n    const timer = () => {\r\n        const checkMinutes = Math.floor(count / 60);\r\n        const hours = Math.floor(count / 3600);\r\n        const minutes = checkMinutes % 60;\r\n        const seconds = count % 60;\r\n        setCurrentHours(hours)\r\n        setCurrentSeconds(seconds)\r\n        setCurrentMinutes(minutes)\r\n    }\r\n\r\n    useEffect(timer, [count]);\r\n\r\n    return(\r\n        <div className='wrap'>\r\n        <style>{'body { background-color: #FFCCE5; }'}</style>\r\n        <BackGround>\r\n            <WhiteBar className=\"fadein\"> \r\n                <TextSet>\r\n                    <Font className=\"fadein\">\r\n                        {currentHours < 10 ? `0${currentHours}` : currentHours}:{\r\n                        currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes}:{\r\n                        currentSeconds < 10 ? `0${currentSeconds}` : currentSeconds}\r\n                    </Font>\r\n\r\n                    <Btn onClick={start} className='btnset fadein'>Start</Btn>\r\n                    <Btn onClick={stop} className='btnset fadein'>Stop</Btn>\r\n                    <Btn onClick={reset} className='btnset fadein'>Reset</Btn>\r\n                </TextSet>\r\n            </WhiteBar>\r\n        </BackGround>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}